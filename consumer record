public class ConsumerRecord {
    public static void sendEmailNotification(List<consumer__c> consumers) {
        if (consumers == null || consumers.isEmpty()) {
            return; // Exit if the list is null or empty.
        }

        List<Messaging.SingleEmailMessage> emails = new List<Messaging.SingleEmailMessage>();

        for (consumer__c consumer : consumers) {
            // Check if the email field is populated
            if (String.isNotBlank(consumer.email__c)) {
                Messaging.SingleEmailMessage email = new Messaging.SingleEmailMessage();
                email.setToAddresses(new List<String>{consumer.email__c});
                email.setSubject('Welcome to our company');
                
                // Personalize the email body
                String body = 'Dear ' + consumer.Name + ',\n\n' +
                              'Welcome to MY RICE! You have been seen as a valuable customer to us. Please continue your journey with us, while we try to provide you with good quality resources.\n\n' +
                              'We are proud to associate with valuable customers like you, and we look forward to collaborating with you by providing more exciting discounts and product offers.\n\n' +
                              'So why take a step back? Take a leap of faith and shop with us more, while we provide you with valuable products and offers.\n\n' +
                              'Thank you for buying. Here are some of the products that are purchased by customers like you.\n\n' +
                              '-- Team MY RICE';
                
                email.setPlainTextBody(body);

                emails.add(email);
            }
        }

        // Send the emails if there are any to send
        if (!emails.isEmpty()) {
            Messaging.sendEmail(emails);
        }
    }
}


trigger consumerTrigger on consumer__c (After insert) {
    if(trigger.isAfter && trigger.isInsert) {
        ConsumerRecord.sendEmailNotification(trigger.new);
    }
}
